#!/bin/bash

function createregulatoryDepartment() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/regulatoryDepartment.ptracing.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-regulatoryDepartment --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-regulatoryDepartment.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-regulatoryDepartment.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-regulatoryDepartment.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-regulatoryDepartment.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy regulatoryDepartment's CA cert to regulatoryDepartment's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/msp/tlscacerts/ca.crt"

  # Copy regulatoryDepartment's CA cert to regulatoryDepartment's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/tlsca/tlsca.regulatoryDepartment.ptracing.com-cert.pem"

  # Copy regulatoryDepartment's CA cert to regulatoryDepartment's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/ca"
  cp "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/ca/ca.regulatoryDepartment.ptracing.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-regulatoryDepartment --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-regulatoryDepartment --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-regulatoryDepartment --id.name regulatoryDepartmentadmin --id.secret regulatoryDepartmentadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-regulatoryDepartment -M "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-regulatoryDepartment -M "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/tls" --enrollment.profile tls --csr.hosts peer0.regulatoryDepartment.ptracing.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/peers/peer0.regulatoryDepartment.ptracing.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-regulatoryDepartment -M "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/users/User1@regulatoryDepartment.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/users/User1@regulatoryDepartment.ptracing.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://regulatoryDepartmentadmin:regulatoryDepartmentadminpw@localhost:7054 --caname ca-regulatoryDepartment -M "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/users/Admin@regulatoryDepartment.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartment/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulatoryDepartment.ptracing.com/users/Admin@regulatoryDepartment.ptracing.com/msp/config.yaml"
}

function createfarm() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/farm.ptracing.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/farm.ptracing.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-farm --tls.certfiles "${PWD}/organizations/fabric-ca/farm/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-farm.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-farm.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-farm.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-farm.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/farm.ptracing.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy farm's CA cert to farm's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/farm.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/farm/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farm.ptracing.com/msp/tlscacerts/ca.crt"

  # Copy farm's CA cert to farm's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/farm.ptracing.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/farm/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farm.ptracing.com/tlsca/tlsca.farm.ptracing.com-cert.pem"

  # Copy farm's CA cert to farm's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/farm.ptracing.com/ca"
  cp "${PWD}/organizations/fabric-ca/farm/ca-cert.pem" "${PWD}/organizations/peerOrganizations/farm.ptracing.com/ca/ca.farm.ptracing.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-farm --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/farm/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-farm --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/farm/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-farm --id.name farmadmin --id.secret farmadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/farm/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-farm -M "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farm/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farm.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-farm -M "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/tls" --enrollment.profile tls --csr.hosts peer0.farm.ptracing.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/farm/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/farm.ptracing.com/peers/peer0.farm.ptracing.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-farm -M "${PWD}/organizations/peerOrganizations/farm.ptracing.com/users/User1@farm.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farm/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farm.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farm.ptracing.com/users/User1@farm.ptracing.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://farmadmin:farmadminpw@localhost:8054 --caname ca-farm -M "${PWD}/organizations/peerOrganizations/farm.ptracing.com/users/Admin@farm.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farm/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/farm.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/farm.ptracing.com/users/Admin@farm.ptracing.com/msp/config.yaml"
}

function createprocessor() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/processor.ptracing.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/processor.ptracing.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:10054 --caname ca-processor --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-processor.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-processor.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-processor.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-processor.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/processor.ptracing.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy processor's CA cert to processor's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/processor.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/processor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor.ptracing.com/msp/tlscacerts/ca.crt"

  # Copy processor's CA cert to processor's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/processor.ptracing.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/processor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor.ptracing.com/tlsca/tlsca.processor.ptracing.com-cert.pem"

  # Copy processor's CA cert to processor's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/processor.ptracing.com/ca"
  cp "${PWD}/organizations/fabric-ca/processor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/processor.ptracing.com/ca/ca.processor.ptracing.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-processor --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-processor --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-processor --id.name processoradmin --id.secret processoradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:10054 --caname ca-processor -M "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:10054 --caname ca-processor -M "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/tls" --enrollment.profile tls --csr.hosts peer0.processor.ptracing.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/processor.ptracing.com/peers/peer0.processor.ptracing.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:10054 --caname ca-processor -M "${PWD}/organizations/peerOrganizations/processor.ptracing.com/users/User1@processor.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor.ptracing.com/users/User1@processor.ptracing.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://processoradmin:processoradminpw@localhost:10054 --caname ca-processor -M "${PWD}/organizations/peerOrganizations/processor.ptracing.com/users/Admin@processor.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/processor.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/processor.ptracing.com/users/Admin@processor.ptracing.com/msp/config.yaml"
}

function createdistributor() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/distributor.ptracing.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/distributor.ptracing.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:11054 --caname ca-distributor --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-distributor.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-distributor.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-distributor.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-distributor.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy distributor's CA cert to distributor's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/msp/tlscacerts/ca.crt"

  # Copy distributor's CA cert to distributor's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/tlsca/tlsca.distributor.ptracing.com-cert.pem"

  # Copy distributor's CA cert to distributor's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/ca"
  cp "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem" "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/ca/ca.distributor.ptracing.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-distributor --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-distributor --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-distributor --id.name distributoradmin --id.secret distributoradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:11054 --caname ca-distributor -M "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:11054 --caname ca-distributor -M "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/tls" --enrollment.profile tls --csr.hosts peer0.distributor.ptracing.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/peers/peer0.distributor.ptracing.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:11054 --caname ca-distributor -M "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/users/User1@distributor.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/users/User1@distributor.ptracing.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://distributoradmin:distributoradminpw@localhost:11054 --caname ca-distributor -M "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/users/Admin@distributor.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/distributor/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/distributor.ptracing.com/users/Admin@distributor.ptracing.com/msp/config.yaml"
}

function createRegulatoryDepartmentOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-regulatoryDepartmentOrderer --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartmentOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-regulatoryDepartmentOrderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-regulatoryDepartmentOrderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-regulatoryDepartmentOrderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-regulatoryDepartmentOrderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/regulatoryDepartmentOrderer/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/msp/tlscacerts/tlsca.regulatoryDepartmentOrderer.ptracing.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/regulatoryDepartmentOrderer/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/tlsca/tlsca.regulatoryDepartmentOrderer.ptracing.com-cert.pem"

  echo "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-regulatoryDepartmentOrderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartmentOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-regulatoryDepartmentOrderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartmentOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-regulatoryDepartmentOrderer -M "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartmentOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/msp/config.yaml"

  echo "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-regulatoryDepartmentOrderer -M "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/tls" --enrollment.profile tls --csr.hosts regulatoryDepartmentOrderer.ptracing.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartmentOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/orderers/regulatoryDepartmentOrderer.ptracing.com/msp/tlscacerts/tlsca.regulatoryDepartmentOrderer.ptracing.com-cert.pem"

  echo "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-regulatoryDepartmentOrderer -M "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/users/Admin@regulatoryDepartmentOrderer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryDepartmentOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/regulatoryDepartmentOrderer.ptracing.com/users/Admin@regulatoryDepartmentOrderer.ptracing.com/msp/config.yaml"
}

function createFarmOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/farmOrderer.ptracing.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:4054 --caname ca-farmOrderer --tls.certfiles "${PWD}/organizations/fabric-ca/farmOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-4054-ca-farmOrderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-4054-ca-farmOrderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-4054-ca-farmOrderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-4054-ca-farmOrderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/farmOrderer/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/msp/tlscacerts/tlsca.farmOrderer.ptracing.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/farmOrderer/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/tlsca/tlsca.farmOrderer.ptracing.com-cert.pem"

  echo "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-farmOrderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/farmOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-farmOrderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/farmOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:4054 --caname ca-farmOrderer -M "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farmOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/msp/config.yaml"

  echo "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:4054 --caname ca-farmOrderer -M "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/tls" --enrollment.profile tls --csr.hosts farmOrderer.ptracing.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/farmOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/orderers/farmOrderer.ptracing.com/msp/tlscacerts/tlsca.farmOrderer.ptracing.com-cert.pem"

  echo "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:4054 --caname ca-farmOrderer -M "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/users/Admin@farmOrderer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/farmOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/farmOrderer.ptracing.com/users/Admin@farmOrderer.ptracing.com/msp/config.yaml"
}

function createProcessorOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/processorOrderer.ptracing.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:5054 --caname ca-processorOrderer --tls.certfiles "${PWD}/organizations/fabric-ca/processorOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-5054-ca-processorOrderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-5054-ca-processorOrderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-5054-ca-processorOrderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-5054-ca-processorOrderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/processorOrderer/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/msp/tlscacerts/tlsca.processorOrderer.ptracing.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/processorOrderer/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/tlsca/tlsca.processorOrderer.ptracing.com-cert.pem"

  echo "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-processorOrderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/processorOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-processorOrderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/processorOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:5054 --caname ca-processorOrderer -M "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processorOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/msp/config.yaml"

  echo "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:5054 --caname ca-processorOrderer -M "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/tls" --enrollment.profile tls --csr.hosts processorOrderer.ptracing.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/processorOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/orderers/processorOrderer.ptracing.com/msp/tlscacerts/tlsca.processorOrderer.ptracing.com-cert.pem"

  echo "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:5054 --caname ca-processorOrderer -M "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/users/Admin@processorOrderer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/processorOrderer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/processorOrderer.ptracing.com/users/Admin@processorOrderer.ptracing.com/msp/config.yaml"
}

function createretailer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/retailer.ptracing.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/retailer.ptracing.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:6054 --caname ca-retailer --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-6054-ca-retailer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-6054-ca-retailer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-6054-ca-retailer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-6054-ca-retailer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy retailer's CA cert to retailer's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/msp/tlscacerts/ca.crt"

  # Copy retailer's CA cert to retailer's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/tlsca/tlsca.retailer.ptracing.com-cert.pem"

  # Copy retailer's CA cert to retailer's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/ca"
  cp "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/ca/ca.retailer.ptracing.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-retailer --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-retailer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-retailer --id.name retaileradmin --id.secret retaileradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:6054 --caname ca-retailer -M "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:6054 --caname ca-retailer -M "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/tls" --enrollment.profile tls --csr.hosts peer0.retailer.ptracing.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/peers/peer0.retailer.ptracing.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:6054 --caname ca-retailer -M "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/users/User1@retailer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/users/User1@retailer.ptracing.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://retaileradmin:retaileradminpw@localhost:6054 --caname ca-retailer -M "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/users/Admin@retailer.ptracing.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/retailer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/retailer.ptracing.com/users/Admin@retailer.ptracing.com/msp/config.yaml"
}

createregulatoryDepartment
createfarm
createprocessor
createretailer
createdistributor
createRegulatoryDepartmentOrderer
createFarmOrderer
createProcessorOrderer